version: "3.9"

services:

  backend:
    build:
      context: .
      dockerfile: ./streaming_project/Dockerfile
    container_name: backend
    command: gunicorn streaming_project.asgi:application -k uvicorn.workers.UvicornWorker --bind 0.0.0.0:8000
    volumes:
      - ./streaming_project:/app
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis

  frontend-builder:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend-builder
    volumes:
      - frontend-build:/app/dist
    profiles: ["build-only"]  # чтобы не запускался при up по умолчанию

  nginx:
    image: nginx:stable
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - frontend-build:/usr/share/nginx/html
      - ./streaming_project/static:/app/static
      - ./streaming_project/uploads:/app/uploads
    depends_on:
      - backend

  db:
    image: postgres:16
    container_name: db
    volumes:
      - pgdata:/var/lib/postgresql/data
    env_file:
      - .env

  redis:
    image: redis:7
    container_name: redis

  celery:
    build:
      context: .
      dockerfile: ./streaming_project/Dockerfile
    container_name: celery
    command: celery -A streaming_project worker -l info
    volumes:
      - ./streaming_project:/app
    env_file:
      - .env
    depends_on:
      - redis
      - db

  celery-beat:
    build:
      context: .
      dockerfile: ./streaming_project/Dockerfile
    container_name: celery-beat
    command: celery -A streaming_project beat -l info
    volumes:
      - ./streaming_project:/app
    env_file:
      - .env
    depends_on:
      - redis
      - db

volumes:
  pgdata:
  frontend-build:
